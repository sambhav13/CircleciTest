
# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn clean package

      - store_test_results:
          path: target/surefire-reports

      - store_artifacts:
          path: target/CircleciTest-1.0-SNAPSHOT.jar
      - run: echo "completed first build"
      - run: mkdir -p workspace1
      - run: echo "Trying out workspaces" > workspace1/echo-output
      - persist_to_workspace:
         root: workspace1
         paths:
           - echo-output

  build2:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - run: mvn clean package
      - run: echo "completed second build"


  build3:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - run: echo "completed third build"
      - attach_workspace:
          at: workspace1
      - run: |
          if [[ $(cat workspace1/echo-output) == "Trying out workspaces" ]]; then
            echo "it worked";
          else
            echo "Nope!"; exit 1
          fi
      - run:
  build4:
    docker:
      -image: yobasystems/alpine-postgres
    working_directory: ~/repo
    steps:
      - checkout:
      - run: sudo apt-get install postgres-client-9.6
      - run: whoami
      - run: |
          psql -d postgres://root@localhost/circle_test -c CREATE TABLE test(name char(25));
      - run: |
          psql -d postgres://root@localhost/circle_test -c INSERT INTO test VALUES('fern');
      - run: |
          psql -d postgres://root@localhost/circle_test -c SELECT * FROM test;


workflows:
  version: 2
  one_and_two:
    jobs:
      - build
      - build2
      - build3:
          requires:
            - build
      - build4
